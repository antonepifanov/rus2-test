(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _initAccordion = require("./modules/accordion/init-accordion");
var _initTabs = require("./modules/tabs/init-tabs");
var _iosVhFix = require("./utils/ios-vh-fix");
window.addEventListener('DOMContentLoaded', function () {
  // Utils
  (0, _iosVhFix.iosVhFix)();

  // Modules
  (0, _initTabs.initTabs)();
  (0, _initAccordion.initAccordions)();
  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана
  window.addEventListener('load', function () {});
});

// ---------------------------------

// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.

// привязывайте js не на классы, а на дата атрибуты (data-validate)

// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅

// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.

// для адаптивного JS используется matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();

// используйте .closest(el)

},{"./modules/accordion/init-accordion":3,"./modules/tabs/init-tabs":4,"./utils/ios-vh-fix":7}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Accordions = void 0;
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var Accordions = exports.Accordions = /*#__PURE__*/function () {
  function Accordions() {
    _classCallCheck(this, Accordions);
    this._openHeight = 0;
    this._windowWidth = window.innerWidth;
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._windowResizeHandler = this._windowResizeHandler.bind(this);
    this._init();
  }
  return _createClass(Accordions, [{
    key: "_init",
    value: function _init() {
      this.fullUpdate();
      document.addEventListener('click', this._documentClickHandler);
      window.addEventListener('resize', this._windowResizeHandler);
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-accordion="button"]')) {
        return;
      }
      evt.preventDefault();
      var parent = target.closest('[data-accordion="parent"]');
      if (parent.dataset.destroy && !window.matchMedia(parent.dataset.destroy).matches) {
        return;
      }
      var element = target.closest('[data-accordion="element"]');
      if (element.classList.contains('is-active')) {
        this.closeAccordion(element);
        return;
      }
      this.openAccordion(element);
    }
  }, {
    key: "_windowResizeHandler",
    value: function _windowResizeHandler() {
      if (this._windowWidth === window.innerWidth) {
        return;
      }
      this._windowWidth = window.innerWidth;
      this.updateAccordionsHeight();
    }
  }, {
    key: "closeAllAccordion",
    value: function closeAllAccordion(parent) {
      var _this = this;
      var elements = parent.querySelectorAll('[data-accordion="element"]');
      elements.forEach(function (element) {
        var currentParent = element.closest('[data-accordion="parent"]');
        if (currentParent === parent) {
          _this.closeAccordion(element);
        }
      });
    }
  }, {
    key: "updateAccordionsHeight",
    value: function updateAccordionsHeight() {
      var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      if (element) {
        var content = element.querySelector('[data-accordion="content"]');
        content.style.transition = 'none';
        content.style.maxHeight = "".concat(content.scrollHeight, "px");
        setTimeout(function () {
          content.style.transition = null;
        });
        return;
      }
      var closeElements = document.querySelectorAll('[data-accordion="element"]:not(.is-active)');
      closeElements.forEach(function (closeElement) {
        var parent = closeElement.closest('[data-accordion="parent"]');
        var content = closeElement.querySelector('[data-accordion="content"]');
        if (parent.dataset.destroy && !window.matchMedia(parent.dataset.destroy).matches) {
          content.style.maxHeight = '100%';
          return;
        }
        content.style.maxHeight = null;
      });
      var openElements = document.querySelectorAll('[data-accordion="element"].is-active');
      openElements.forEach(function (openElement) {
        var content = openElement.querySelector('[data-accordion="content"]');
        var parent = openElement.closest('[data-accordion="parent"]');
        if (parent.dataset.destroy && !window.matchMedia(parent.dataset.destroy).matches) {
          content.style.maxHeight = '100%';
          return;
        }
        content.style.transition = 'none';
        content.style.maxHeight = "".concat(content.scrollHeight, "px");
        setTimeout(function () {
          content.style.transition = null;
        });
      });
    }
  }, {
    key: "fullUpdate",
    value: function fullUpdate() {
      var _this2 = this;
      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var openElements;
      if (parent) {
        openElements = parent.querySelectorAll('[data-accordion="element"].is-active');
      } else {
        openElements = document.querySelectorAll('[data-accordion="element"].is-active');
      }
      openElements.forEach(function (openElement) {
        var innerParent = openElement.querySelector('[data-accordion="parent"]');
        if (innerParent) {
          return;
        }
        _this2.openAccordion(openElement, transition);
      });
      this.updateAccordionsHeight();
    }
  }, {
    key: "openAccordion",
    value: function openAccordion(element) {
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var parentElement = element.closest('[data-accordion="parent"]');
      var contentElement = element.querySelector('[data-accordion="content"]');
      this._openHeight += contentElement.scrollHeight;
      if (parentElement.hasAttribute('data-single')) {
        this.closeAllAccordion(parentElement);
      }
      element.classList.add('is-active');
      if (transition) {
        contentElement.style.maxHeight = "".concat(this._openHeight, "px");
      } else {
        contentElement.style.transition = 'none';
        contentElement.style.maxHeight = "".concat(this._openHeight, "px");
        setTimeout(function () {
          contentElement.style.transition = null;
        });
      }
      if (parentElement.closest('[data-accordion="element"]')) {
        this.openAccordion(parentElement.closest('[data-accordion="element"]'), transition);
        return;
      }
      this._openHeight = 0;
    }
  }, {
    key: "closeAccordion",
    value: function closeAccordion(element) {
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var contentElement = element.querySelector('[data-accordion="content"]');
      if (!contentElement) {
        return;
      }
      element.classList.remove('is-active');
      if (transition) {
        contentElement.style.maxHeight = '0';
      } else {
        contentElement.style.transition = 'none';
        contentElement.style.maxHeight = '0';
        setTimeout(function () {
          contentElement.style.transition = null;
        });
      }
    }
  }]);
}();

},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initAccordions = exports.accordions = void 0;
var _accordions = require("./accordions");
var accordions;
var initAccordions = exports.initAccordions = function initAccordions() {
  exports.accordions = accordions = new _accordions.Accordions();
  // Используйте в разработке экспортируемую переменную accordions, window сделан для бэкэнда
  window.accordions = accordions;
};

},{"./accordions":2}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tabs = exports.initTabs = void 0;
var _tabs = require("./tabs");
var tabs;
var initTabs = exports.initTabs = function initTabs() {
  exports.tabs = tabs = new _tabs.Tabs();
  // Используйте в разработке экспортируемую переменную tabs, window сделан для бэкэнда
  window.tabs = tabs;
};

},{"./tabs":5}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tabs = void 0;
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var Tabs = exports.Tabs = /*#__PURE__*/function () {
  function Tabs() {
    _classCallCheck(this, Tabs);
    this._windowWidth = window.innerWidth;
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._init();
  }
  return _createClass(Tabs, [{
    key: "_init",
    value: function _init() {
      this._initAllTabs();
      document.addEventListener('click', this._documentClickHandler);
    }
  }, {
    key: "_resizeObserver",
    value: function _resizeObserver() {
      var _this = this;
      return new ResizeObserver(function (entries) {
        var _iterator = _createForOfIteratorHelper(entries),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var entry = _step.value;
            if (entry.target.classList.contains('is-active')) {
              _this._updateTabHeight();
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      });
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-tabs="control"]')) {
        return;
      }
      evt.preventDefault();
      var control = target.closest('[data-tabs="control"]');
      this.openTab(control);
    }
  }, {
    key: "_initAllTabs",
    value: function _initAllTabs() {
      var _this2 = this;
      var tabs = document.querySelectorAll('[data-tabs="parent"]');
      var forLoadTabs = document.querySelectorAll('[data-tabs="element"].for-load');
      tabs.forEach(function (tab) {
        _this2._initTab(tab);
      });
      forLoadTabs.forEach(function (tab) {
        tab.classList.remove('for-load');
      });
    }
  }, {
    key: "_removeAllActiveClasses",
    value: function _removeAllActiveClasses(tabControlElements, tabElements) {
      tabElements.forEach(function (tab) {
        tab.classList.remove('is-active');
      });
      tabControlElements.forEach(function (element, index) {
        element.classList.remove('is-active');
        element.setAttribute('data-index', index);
      });
    }
  }, {
    key: "_setTabStartState",
    value: function _setTabStartState(tab, dataHeight, tabElements, tabContentElement, tabControlElements, dataDelay) {
      var activeIndex = this._returnActiveIndex(tabControlElements);
      var blockHeight = dataHeight === 'max' ? this._returnMaxHeight(tabElements) : tabElements[activeIndex].offsetHeight;
      this._removeAllActiveClasses(tabControlElements, tabElements);
      tab.classList.add('no-transition');
      tabControlElements[activeIndex].classList.add('is-active');
      tabElements[activeIndex].classList.add('is-active');
      if (dataHeight !== 'unset') {
        tabContentElement.style.height = "".concat(blockHeight, "px");
      }
      setTimeout(function () {
        if (dataDelay) {
          tab.classList.remove('no-transition');
        }
      }, dataDelay);
    }
  }, {
    key: "_returnActiveIndex",
    value: function _returnActiveIndex(tabControlElements) {
      var activeIndex = 0;
      var flag = true;
      tabControlElements.forEach(function (control, index) {
        if (control.classList.contains('is-active') && flag) {
          activeIndex = index;
          flag = false;
        }
      });
      return activeIndex;
    }
  }, {
    key: "_returnMaxHeight",
    value: function _returnMaxHeight(tabElements) {
      var height = [];
      tabElements.forEach(function (element) {
        height.push(element.offsetHeight);
      });
      height.sort(function (a, b) {
        return a - b;
      });
      return height[height.length - 1];
    }
  }, {
    key: "_returnScopeList",
    value: function _returnScopeList(nodeList, parent) {
      var array = [];
      nodeList.forEach(function (element) {
        var elementParent = element.closest('[data-tabs="parent"]');
        if (elementParent === parent) {
          array.push(element);
        }
      });
      return array;
    }
  }, {
    key: "_returnScopeChild",
    value: function _returnScopeChild(nodeList, parent) {
      var currentChild;
      nodeList.forEach(function (element) {
        var elementParent = element.closest('[data-tabs="parent"]');
        if (elementParent === parent) {
          currentChild = element;
        }
      });
      return currentChild;
    }
  }, {
    key: "_updateTabHeight",
    value: function _updateTabHeight() {
      var _this3 = this;
      var activeElements = document.querySelectorAll('[data-tabs="element"].is-active');
      activeElements.forEach(function (element) {
        var transition = false;
        var parent = element.closest('[data-tabs="parent"]');
        if (parent.closest('[data-tabs="element"]')) {
          transition = true;
        }
        _this3._setTabElementHeight(element, transition);
      });
    }
  }, {
    key: "_setTabElementHeight",
    value: function _setTabElementHeight(element, transition) {
      var parentElement = element.closest('[data-tabs="parent"]');
      var dataHeight = parentElement.dataset.height;
      var contentElement = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="content"]'), parentElement);
      var tabElements = this._returnScopeList(parentElement.querySelectorAll('[data-tabs="element"]'), parentElement);
      if (!transition) {
        parentElement.classList.add('no-transition');
      }
      if (dataHeight === 'max') {
        contentElement.style.height = "".concat(this._returnMaxHeight(tabElements), "px");
      } else if (dataHeight === 'unset') {
        contentElement.style.height = null;
      } else {
        contentElement.style.height = "".concat(this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="element"].is-active'), parentElement).offsetHeight, "px");
      }
      setTimeout(function () {
        return parentElement.classList.remove('no-transition');
      });
    }
  }, {
    key: "_initTab",
    value: function _initTab(tab) {
      var _this4 = this;
      var dataHeight = tab.dataset.height;
      var dataDelay = tab.dataset.delay ? tab.dataset.delay : 0;
      var tabContentElement = tab.querySelector('[data-tabs="content"]');
      var tabControlElements = this._returnScopeList(tab.querySelectorAll('[data-tabs="control"]'), tab);
      var tabElements = this._returnScopeList(tab.querySelectorAll('[data-tabs="element"]'), tab);
      this._setTabStartState(tab, dataHeight, tabElements, tabContentElement, tabControlElements, dataDelay);
      if (dataHeight !== 'unset') {
        tabElements.forEach(function (element) {
          _this4._resizeObserver().observe(element);
        });
      }
      setTimeout(function () {
        tab.classList.remove('no-transition-global');
      });
    }
  }, {
    key: "reInit",
    value: function reInit() {
      this._initAllTabs();
    }
  }, {
    key: "openTab",
    value: function openTab(control) {
      var currentIndex = control.dataset.index;
      var parentElement = control.closest('[data-tabs="parent"]');
      if (control.classList.contains('is-active') || parentElement.classList.contains('no-action')) {
        return;
      }
      var dataDelay = parentElement.dataset.delay ? parentElement.dataset.delay : 0;
      var dataHeight = parentElement.dataset.height;
      var contentElement = parentElement.querySelector('[data-tabs="content"]');
      var tabElements = this._returnScopeList(parentElement.querySelectorAll('[data-tabs="element"]'), parentElement);
      var activeControl = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="control"].is-active'), parentElement);
      var activeElement = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="element"].is-active'), parentElement);
      var currentHeight = contentElement.offsetHeight;
      var newHeight = tabElements[currentIndex].offsetHeight;
      parentElement.classList.add('no-action');
      document.activeElement.blur();
      if (activeControl) {
        activeControl.classList.remove('is-active');
      }
      if (activeElement) {
        activeElement.classList.remove('is-active');
      }
      if (currentHeight > newHeight) {
        setTimeout(function () {
          if (dataHeight !== 'max' && dataHeight !== 'unset') {
            contentElement.style.height = newHeight + 'px';
          }
          control.classList.add('is-active');
          tabElements[currentIndex].classList.add('is-active');
          parentElement.classList.remove('no-action');
        }, dataDelay);
      } else {
        if (dataHeight !== 'max' && dataHeight !== 'unset') {
          contentElement.style.height = newHeight + 'px';
        }
        setTimeout(function () {
          control.classList.add('is-active');
          tabElements[currentIndex].classList.add('is-active');
          parentElement.classList.remove('no-action');
        }, dataDelay);
      }
    }
  }]);
}();

},{}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosChecker = void 0;
var iosChecker = exports.iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

},{}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosVhFix = void 0;
var _iosChecker = require("./ios-checker");
var iosVhFix = exports.iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if ((0, _iosChecker.iosChecker)()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};

},{"./ios-checker":6}]},{},[1])


//# sourceMappingURL=main.min.js.map
